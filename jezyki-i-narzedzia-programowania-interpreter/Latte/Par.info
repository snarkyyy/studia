-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Latte/Par.y
-----------------------------------------------------------------------------


rule 36 is unused
rule 37 is unused
rule 38 is unused
rule 39 is unused
rule 40 is unused
rule 41 is unused
rule 42 is unused
rule 43 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListFnDef                               (4)
	FnDef -> Type Ident '(' ListArg ')' Block          (5)
	ListFnDef -> FnDef                                 (6)
	ListFnDef -> FnDef ListFnDef                       (7)
	Arg -> Type '&' Ident                              (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Block                                      (17)
	Stmt -> Type ListItem ';'                          (18)
	Stmt -> Ident '=' Expr ';'                         (19)
	Stmt -> 'return' Expr ';'                          (20)
	Stmt -> 'return' ';'                               (21)
	Stmt -> 'if' '(' Expr ')' Block                    (22)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (23)
	Stmt -> 'while' '(' Expr ')' Block                 (24)
	Stmt -> Expr ';'                                   (25)
	Stmt -> 'break' ';'                                (26)
	Stmt -> 'continue' ';'                             (27)
	Stmt -> FnDef                                      (28)
	Item -> Ident '=' Expr                             (29)
	ListItem -> Item                                   (30)
	ListItem -> Item ',' ListItem                      (31)
	Type -> 'int'                                      (32)
	Type -> 'string'                                   (33)
	Type -> 'boolean'                                  (34)
	Type -> 'void'                                     (35)
	ArgType -> Type                                    (36)
	ArgType -> Type '&'                                (37)
	ListArgType ->                                     (38)
	ListArgType -> ArgType                             (39)
	ListArgType -> ArgType ',' ListArgType             (40)
	ListType ->                                        (41)
	ListType -> Type                                   (42)
	ListType -> Type ',' ListType                      (43)
	Expr6 -> Ident                                     (44)
	Expr6 -> Integer                                   (45)
	Expr6 -> 'true'                                    (46)
	Expr6 -> 'false'                                   (47)
	Expr6 -> Ident '(' ListExpr ')'                    (48)
	Expr6 -> String                                    (49)
	Expr6 -> '(' Expr ')'                              (50)
	Expr5 -> '-' Expr6                                 (51)
	Expr5 -> '!' Expr6                                 (52)
	Expr5 -> Expr6                                     (53)
	Expr4 -> Expr4 MulOp Expr5                         (54)
	Expr4 -> Expr5                                     (55)
	Expr3 -> Expr3 AddOp Expr4                         (56)
	Expr3 -> Expr4                                     (57)
	Expr2 -> Expr2 RelOp Expr3                         (58)
	Expr2 -> Expr3                                     (59)
	Expr1 -> Expr2 '&&' Expr1                          (60)
	Expr1 -> Expr2                                     (61)
	Expr -> Expr1 '||' Expr                            (62)
	Expr -> Expr1                                      (63)
	ListExpr ->                                        (64)
	ListExpr -> Expr                                   (65)
	ListExpr -> Expr ',' ListExpr                      (66)
	AddOp -> '+'                                       (67)
	AddOp -> '-'                                       (68)
	MulOp -> '*'                                       (69)
	MulOp -> '/'                                       (70)
	MulOp -> '%'                                       (71)
	RelOp -> '<'                                       (72)
	RelOp -> '<='                                      (73)
	RelOp -> '>'                                       (74)
	RelOp -> '>='                                      (75)
	RelOp -> '=='                                      (76)
	RelOp -> '!='                                      (77)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	';'            { PT _ (TS _ 13) }
	'<'            { PT _ (TS _ 14) }
	'<='           { PT _ (TS _ 15) }
	'='            { PT _ (TS _ 16) }
	'=='           { PT _ (TS _ 17) }
	'>'            { PT _ (TS _ 18) }
	'>='           { PT _ (TS _ 19) }
	'boolean'      { PT _ (TS _ 20) }
	'break'        { PT _ (TS _ 21) }
	'continue'     { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'return'       { PT _ (TS _ 27) }
	'string'       { PT _ (TS _ 28) }
	'true'         { PT _ (TS _ 29) }
	'void'         { PT _ (TS _ 30) }
	'while'        { PT _ (TS _ 31) }
	'{'            { PT _ (TS _ 32) }
	'||'           { PT _ (TS _ 33) }
	'}'            { PT _ (TS _ 34) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	FnDef           rule  5
	ListFnDef       rules 6, 7
	Arg             rules 8, 9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
	Item            rule  29
	ListItem        rules 30, 31
	Type            rules 32, 33, 34, 35
	ArgType         rules 36, 37
	ListArgType     rules 38, 39, 40
	ListType        rules 41, 42, 43
	Expr6           rules 44, 45, 46, 47, 48, 49, 50
	Expr5           rules 51, 52, 53
	Expr4           rules 54, 55
	Expr3           rules 56, 57
	Expr2           rules 58, 59
	Expr1           rules 60, 61
	Expr            rules 62, 63
	ListExpr        rules 64, 65, 66
	AddOp           rules 67, 68
	MulOp           rules 69, 70, 71
	RelOp           rules 72, 73, 74, 75, 76, 77

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	FnDef          goto state 4
	ListFnDef      goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListFnDef -> FnDef .                                (rule 6)
	ListFnDef -> FnDef . ListFnDef                      (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 6

	FnDef          goto state 4
	ListFnDef      goto state 12
	Type           goto state 6

State 5

	Program -> ListFnDef .                              (rule 4)

	%eof           reduce using rule 4


State 6

	FnDef -> Type . Ident '(' ListArg ')' Block         (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'boolean' .                                 (rule 34)

	'&'            reduce using rule 34
	L_Ident        reduce using rule 34


State 8

	Type -> 'int' .                                     (rule 32)

	'&'            reduce using rule 32
	L_Ident        reduce using rule 32


State 9

	Type -> 'string' .                                  (rule 33)

	'&'            reduce using rule 33
	L_Ident        reduce using rule 33


State 10

	Type -> 'void' .                                    (rule 35)

	'&'            reduce using rule 35
	L_Ident        reduce using rule 35


State 11

	FnDef -> Type Ident . '(' ListArg ')' Block         (rule 5)

	'('            shift, and enter state 13


State 12

	ListFnDef -> FnDef ListFnDef .                      (rule 7)

	%eof           reduce using rule 7


State 13

	FnDef -> Type Ident '(' . ListArg ')' Block         (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 15
	Type           goto state 16

State 14

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 20


State 15

	FnDef -> Type Ident '(' ListArg . ')' Block         (rule 5)

	')'            shift, and enter state 19


State 16

	Arg -> Type . '&' Ident                             (rule 8)
	Arg -> Type . Ident                                 (rule 9)

	'&'            shift, and enter state 18
	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 18

	Arg -> Type '&' . Ident                             (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 19

	FnDef -> Type Ident '(' ListArg ')' . Block         (rule 5)

	'{'            shift, and enter state 23

	Block          goto state 22

State 20

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 21
	Type           goto state 16

State 21

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 22

	FnDef -> Type Ident '(' ListArg ')' Block .         (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'boolean'      reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'void'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 23

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 44
	'continue'     shift, and enter state 45
	'false'        shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 8
	'return'       shift, and enter state 48
	'string'       shift, and enter state 9
	'true'         shift, and enter state 49
	'void'         shift, and enter state 10
	'while'        shift, and enter state 50
	'{'            shift, and enter state 23
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	FnDef          goto state 28
	Block          goto state 29
	ListStmt       goto state 30
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 24

	Arg -> Type '&' Ident .                             (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 25

	Stmt -> Ident . '=' Expr ';'                        (rule 19)
	Expr6 -> Ident .                                    (rule 44)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 48)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            shift, and enter state 85
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            shift, and enter state 86
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 26

	Expr6 -> Integer .                                  (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 27

	Expr6 -> String .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 28

	Stmt -> FnDef .                                     (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 29

	Stmt -> Block .                                     (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 30

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 84


State 31

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 43
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 44
	'continue'     shift, and enter state 45
	'false'        shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 8
	'return'       shift, and enter state 48
	'string'       shift, and enter state 9
	'true'         shift, and enter state 49
	'void'         shift, and enter state 10
	'while'        shift, and enter state 50
	'{'            shift, and enter state 23
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	FnDef          goto state 28
	Block          goto state 29
	ListStmt       goto state 83
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 32

	FnDef -> Type . Ident '(' ListArg ')' Block         (rule 5)
	Stmt -> Type . ListItem ';'                         (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 80
	Item           goto state 81
	ListItem       goto state 82

State 33

	Expr5 -> Expr6 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 34

	Expr4 -> Expr5 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 35

	Expr4 -> Expr4 . MulOp Expr5                        (rule 54)
	Expr3 -> Expr4 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            shift, and enter state 77
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            shift, and enter state 78
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            shift, and enter state 79
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57

	MulOp          goto state 76

State 36

	Expr3 -> Expr3 . AddOp Expr4                        (rule 56)
	Expr2 -> Expr3 .                                    (rule 59)

	'!='           reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'+'            shift, and enter state 74
	','            reduce using rule 59
	'-'            shift, and enter state 75
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59

	AddOp          goto state 73

State 37

	Expr2 -> Expr2 . RelOp Expr3                        (rule 58)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 60)
	Expr1 -> Expr2 .                                    (rule 61)

	'!='           shift, and enter state 66
	'&&'           shift, and enter state 67
	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'<'            shift, and enter state 68
	'<='           shift, and enter state 69
	'=='           shift, and enter state 70
	'>'            shift, and enter state 71
	'>='           shift, and enter state 72
	'||'           reduce using rule 61

	RelOp          goto state 65

State 38

	Expr -> Expr1 . '||' Expr                           (rule 62)
	Expr -> Expr1 .                                     (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63
	'||'           shift, and enter state 64


State 39

	Stmt -> Expr . ';'                                  (rule 25)

	';'            shift, and enter state 63


State 40

	Expr5 -> '!' . Expr6                                (rule 52)

	'('            shift, and enter state 41
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 62

State 41

	Expr6 -> '(' . Expr ')'                             (rule 50)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 61

State 42

	Expr5 -> '-' . Expr6                                (rule 51)

	'('            shift, and enter state 41
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 60

State 43

	Stmt -> ';' .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 44

	Stmt -> 'break' . ';'                               (rule 26)

	';'            shift, and enter state 59


State 45

	Stmt -> 'continue' . ';'                            (rule 27)

	';'            shift, and enter state 58


State 46

	Expr6 -> 'false' .                                  (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 47

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 22)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 23)

	'('            shift, and enter state 57


State 48

	Stmt -> 'return' . Expr ';'                         (rule 20)
	Stmt -> 'return' . ';'                              (rule 21)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	';'            shift, and enter state 56
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 55

State 49

	Expr6 -> 'true' .                                   (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 50

	Stmt -> 'while' . '(' Expr ')' Block                (rule 24)

	'('            shift, and enter state 53


State 51

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 52

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 53

	Stmt -> 'while' '(' . Expr ')' Block                (rule 24)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 101

State 54

	Expr6 -> Ident .                                    (rule 44)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 48)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            shift, and enter state 85
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 55

	Stmt -> 'return' Expr . ';'                         (rule 20)

	';'            shift, and enter state 100


State 56

	Stmt -> 'return' ';' .                              (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 57

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 22)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 23)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 99

State 58

	Stmt -> 'continue' ';' .                            (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 59

	Stmt -> 'break' ';' .                               (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 60

	Expr5 -> '-' Expr6 .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 61

	Expr6 -> '(' Expr . ')'                             (rule 50)

	')'            shift, and enter state 98


State 62

	Expr5 -> '!' Expr6 .                                (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 63

	Stmt -> Expr ';' .                                  (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 64

	Expr -> Expr1 '||' . Expr                           (rule 62)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 97

State 65

	Expr2 -> Expr2 RelOp . Expr3                        (rule 58)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 96

State 66

	RelOp -> '!=' .                                     (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 67

	Expr1 -> Expr2 '&&' . Expr1                         (rule 60)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 95

State 68

	RelOp -> '<' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 69

	RelOp -> '<=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 70

	RelOp -> '==' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 71

	RelOp -> '>' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 72

	RelOp -> '>=' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 73

	Expr3 -> Expr3 AddOp . Expr4                        (rule 56)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 94

State 74

	AddOp -> '+' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 75

	AddOp -> '-' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 76

	Expr4 -> Expr4 MulOp . Expr5                        (rule 54)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 93

State 77

	MulOp -> '%' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 78

	MulOp -> '*' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 79

	MulOp -> '/' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 80

	FnDef -> Type Ident . '(' ListArg ')' Block         (rule 5)
	Item -> Ident . '=' Expr                            (rule 29)

	'('            shift, and enter state 13
	'='            shift, and enter state 92


State 81

	ListItem -> Item .                                  (rule 30)
	ListItem -> Item . ',' ListItem                     (rule 31)

	','            shift, and enter state 91
	';'            reduce using rule 30


State 82

	Stmt -> Type ListItem . ';'                         (rule 18)

	';'            shift, and enter state 90


State 83

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 84

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 85

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 48)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	')'            reduce using rule 64
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 88
	ListExpr       goto state 89

State 86

	Stmt -> Ident '=' . Expr ';'                        (rule 19)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 87

State 87

	Stmt -> Ident '=' Expr . ';'                        (rule 19)

	';'            shift, and enter state 109


State 88

	ListExpr -> Expr .                                  (rule 65)
	ListExpr -> Expr . ',' ListExpr                     (rule 66)

	')'            reduce using rule 65
	','            shift, and enter state 108


State 89

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 48)

	')'            shift, and enter state 107


State 90

	Stmt -> Type ListItem ';' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 91

	ListItem -> Item ',' . ListItem                     (rule 31)

	L_Ident        shift, and enter state 2

	Ident          goto state 105
	Item           goto state 81
	ListItem       goto state 106

State 92

	Item -> Ident '=' . Expr                            (rule 29)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 104

State 93

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 94

	Expr4 -> Expr4 . MulOp Expr5                        (rule 54)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 77
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 78
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 79
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56

	MulOp          goto state 76

State 95

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'||'           reduce using rule 60


State 96

	Expr3 -> Expr3 . AddOp Expr4                        (rule 56)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 74
	','            reduce using rule 58
	'-'            shift, and enter state 75
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58

	AddOp          goto state 73

State 97

	Expr -> Expr1 '||' Expr .                           (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62


State 98

	Expr6 -> '(' Expr ')' .                             (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 99

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 22)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 23)

	')'            shift, and enter state 103


State 100

	Stmt -> 'return' Expr ';' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 101

	Stmt -> 'while' '(' Expr . ')' Block                (rule 24)

	')'            shift, and enter state 102


State 102

	Stmt -> 'while' '(' Expr ')' . Block                (rule 24)

	'{'            shift, and enter state 23

	Block          goto state 112

State 103

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 22)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 23)

	'{'            shift, and enter state 23

	Block          goto state 111

State 104

	Item -> Ident '=' Expr .                            (rule 29)

	','            reduce using rule 29
	';'            reduce using rule 29


State 105

	Item -> Ident . '=' Expr                            (rule 29)

	'='            shift, and enter state 92


State 106

	ListItem -> Item ',' ListItem .                     (rule 31)

	';'            reduce using rule 31


State 107

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 108

	ListExpr -> Expr ',' . ListExpr                     (rule 66)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	')'            reduce using rule 64
	'-'            shift, and enter state 42
	'false'        shift, and enter state 46
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 88
	ListExpr       goto state 110

State 109

	Stmt -> Ident '=' Expr ';' .                        (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 110

	ListExpr -> Expr ',' ListExpr .                     (rule 66)

	')'            reduce using rule 66


State 111

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 22)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 23)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'else'         shift, and enter state 113
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 112

	Stmt -> 'while' '(' Expr ')' Block .                (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 113

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 23)

	'{'            shift, and enter state 23

	Block          goto state 114

State 114

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 78
Number of terminals: 37
Number of non-terminals: 29
Number of states: 115
